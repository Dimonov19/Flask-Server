import requests
import os
import json

class LeonardoHandler:
    API_URL = "https://cloud.leonardo.ai/api/rest/v1/generations"
    API_KEY = os.getenv("LEONARDO_API_KEY")

    @staticmethod
    def generate_image(prompt: str):
        try:
            payload = {
                "prompt": prompt,
                "negative_prompt": "",
                "imageWidth": 512,
                "imageHeight": 512,
                "modelId": "ac614f96-1082-45bf-be9d-757f2d31c174",
                "scheduler": "EULER_DISCRETE"
            }

            headers = {"Authorization": f"Bearer {LeonardoHandler.API_KEY}"}

            print("Payload:", json.dumps(payload, indent=4))  # Логируем payload
            print("Headers:", json.dumps(headers, indent=4))  # Логируем headers

            response = requests.post(
                LeonardoHandler.API_URL,
                headers=headers,
                json=payload
            )

            print("Response Status Code:", response.status_code)
            print("Response Content:", response.text)  # Логируем ответ API

            response_data = response.json()
            if response.status_code != 200:
                raise Exception(f"Leonardo API error: {response.text}")

            generated_images = response_data.get("generations_by_pk", {}).get("generated_images", [])
            if not generated_images:
                raise Exception("No images generated by Leonardo API")

            image_url = generated_images[0]["url"]
            return {"success": True, "image_url": image_url}
        except Exception as e:
            print("Error during API call:", str(e))  # Логируем ошибки
            return {"success": False, "error": str(e)}
