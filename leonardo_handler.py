import requests
import os
import json

class LeonardoHandler:
    API_URL = "https://cloud.leonardo.ai/api/rest/v1/generations"
    API_KEY = os.getenv("LEONARDO_API_KEY")

    @staticmethod
    def generate_image(prompt: str):
        try:
            # Формируем payload
            payload = {
                "prompt": prompt,
                "negative_prompt": "",
                "imageWidth": 512,
                "imageHeight": 512,
                "modelId": "ac614f96-1082-45bf-be9d-757f2d31c174",
                "scheduler": "EULER_DISCRETE"
            }

            # Заголовки
            headers = {"Authorization": f"Bearer {LeonardoHandler.API_KEY}"}

            # Логирование данных
            print("Payload:", json.dumps(payload, indent=4))
            print("Headers:", json.dumps(headers, indent=4))

            # Выполняем запрос
            response = requests.post(
                LeonardoHandler.API_URL,
                headers=headers,
                json=payload
            )

            # Логирование ответа
            print("Response Status Code:", response.status_code)
            print("Response Content:", response.text)

            # Проверка статуса ответа
            if response.status_code != 200:
                raise Exception(f"Leonardo API error: {response.text}")

            # Парсим ответ
            response_data = response.json()
            generated_images = response_data.get("generations_by_pk", {}).get("generated_images", [])

            # Проверяем наличие сгенерированных изображений
            if not generated_images:
                raise Exception("No images generated by Leonardo API")

            # Берем первый URL изображения
            image_url = generated_images[0]["url"]
            return {"success": True, "image_url": image_url}

        except Exception as e:
            # Логирование ошибок
            print("Error during API call:", str(e))
            return {"success": False, "error": str(e)}
